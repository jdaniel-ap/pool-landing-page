---
import { Image } from "astro:assets";

const { data } = Astro.props;
let activeTab = "1";
const initialService = data.find((item) => item.id === activeTab);
---

<div class="flex flex-wrap gap-5">
  {
    data?.map((item) => (
      <button
        id={item.id}
        class={`service-btns flex-1 min-w-40 h-32 rounded-lg border-gray-200 border-[2px] flex items-center justify-center cursor-pointer select-none ${
          activeTab === item.id ? "bg-main-light" : ""
        }`}
      >
        {item.title}
      </button>
    ))
  }
</div>

<div id="service-content" class="mt-5">
  <!-- Aquí se cargará dinámicamente el contenido según el tab seleccionado -->
  {
    initialService && (
      <div>
        <h2 class="text-xl font-bold">{initialService?.title}</h2>
        <p class="text-gray-600">{initialService?.description}</p>
        <div class="gap-3 mt-3 grid grid-cols-2">
          {initialService?.images?.map((img) => (
            <Image
              width="250"
              height="250"
              src={img}
              alt="Imagen"
              class="size-full object-cover rounded-lg border"
            />
          ))}
        </div>
      </div>
    )
  }
</div>

<script define:vars={{ data }}>
  const buttons = document.querySelectorAll(".service-btns");
  const container = document.querySelector("#service-content");
  buttons.forEach((button) => {
    button.addEventListener("click", () => {
      buttons.forEach((btn) => {
        btn.classList.toggle("bg-main-light", btn.id === button.id);
      });
      const selectedElement = data.find((item) => item.id === button.id);
      if (!selectedElement) return;
      container.innerHTML = `
        <h2 class="text-xl font-bold">${selectedElement?.title || ""}</h2>
        <p class="text-gray-600">${selectedElement?.description || ""}</p>
        <div class="gap-3 mt-3 grid grid-cols-2">
          ${selectedElement.images
            .map(
              (img) =>
                `<img src="${img}" alt="Imagen" class="size-full object-cover rounded-lg border" />`,
            )
            .join("")}
        </div>
      `;
    });
  });
</script>
